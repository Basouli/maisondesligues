1682621905
waR3U4bTeM%3Aeede6073f38c0f060458b6de3d321dc7-772979fdc95028fdbc42cf9bd4392f5c
s:32120:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6Ijc3Mjk3OWZkYzk1MDI4ZmRiYzQyY2Y5YmQ0MzkyZjVjIjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTM6IlZhckNsb25lci5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo0NjoidmVuZG9yL3N5bWZvbnkvdmFyLWR1bXBlci9DbG9uZXIvVmFyQ2xvbmVyLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MTQ4OTc6Ijw/cGhwDQoNCi8qDQogKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgU3ltZm9ueSBwYWNrYWdlLg0KICoNCiAqIChjKSBGYWJpZW4gUG90ZW5jaWVyIDxmYWJpZW5Ac3ltZm9ueS5jb20+DQogKg0KICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXcgdGhlIExJQ0VOU0UNCiAqIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLg0KICovDQoNCm5hbWVzcGFjZSBTeW1mb255XENvbXBvbmVudFxWYXJEdW1wZXJcQ2xvbmVyOw0KDQovKioNCiAqIEBhdXRob3IgTmljb2xhcyBHcmVrYXMgPHBAdGNod29yay5jb20+DQogKi8NCmNsYXNzIFZhckNsb25lciBleHRlbmRzIEFic3RyYWN0Q2xvbmVyDQp7DQogICAgcHJpdmF0ZSBzdGF0aWMgJGdpZDsNCiAgICBwcml2YXRlIHN0YXRpYyAkYXJyYXlDYWNoZSA9IFtdOw0KDQogICAgLyoqDQogICAgICoge0Bpbmhlcml0ZG9jfQ0KICAgICAqLw0KICAgIHByb3RlY3RlZCBmdW5jdGlvbiBkb0Nsb25lKCR2YXIpDQogICAgew0KICAgICAgICAkbGVuID0gMTsgICAgICAgICAgICAgICAgICAgICAgIC8vIExlbmd0aCBvZiAkcXVldWUNCiAgICAgICAgJHBvcyA9IDA7ICAgICAgICAgICAgICAgICAgICAgICAvLyBOdW1iZXIgb2YgY2xvbmVkIGl0ZW1zIHBhc3QgdGhlIG1pbmltdW0gZGVwdGgNCiAgICAgICAgJHJlZnNDb3VudGVyID0gMDsgICAgICAgICAgICAgICAvLyBIYXJkIHJlZmVyZW5jZXMgY291bnRlcg0KICAgICAgICAkcXVldWUgPSBbWyR2YXJdXTsgICAgLy8gVGhpcyBicmVhZHRoLWZpcnN0IHF1ZXVlIGlzIHRoZSByZXR1cm4gdmFsdWUNCiAgICAgICAgJGluZGV4ZWRBcnJheXMgPSBbXTsgICAgICAgLy8gTWFwIG9mIHF1ZXVlIGluZGV4ZXMgdGhhdCBob2xkIG51bWVyaWNhbGx5IGluZGV4ZWQgYXJyYXlzDQogICAgICAgICRoYXJkUmVmcyA9IFtdOyAgICAgICAgICAgIC8vIE1hcCBvZiBvcmlnaW5hbCB6dmFsIGlkcyB0byBzdHViIG9iamVjdHMNCiAgICAgICAgJG9ialJlZnMgPSBbXTsgICAgICAgICAgICAgLy8gTWFwIG9mIG9yaWdpbmFsIG9iamVjdCBoYW5kbGVzIHRvIHRoZWlyIHN0dWIgb2JqZWN0IGNvdW50ZXJwYXJ0DQogICAgICAgICRvYmplY3RzID0gW107ICAgICAgICAgICAgIC8vIEtlZXAgYSByZWYgdG8gb2JqZWN0cyB0byBlbnN1cmUgdGhlaXIgaGFuZGxlIGNhbm5vdCBiZSByZXVzZWQgd2hpbGUgY2xvbmluZw0KICAgICAgICAkcmVzUmVmcyA9IFtdOyAgICAgICAgICAgICAvLyBNYXAgb2Ygb3JpZ2luYWwgcmVzb3VyY2UgaGFuZGxlcyB0byB0aGVpciBzdHViIG9iamVjdCBjb3VudGVycGFydA0KICAgICAgICAkdmFsdWVzID0gW107ICAgICAgICAgICAgICAvLyBNYXAgb2Ygc3R1YiBvYmplY3RzJyBpZHMgdG8gb3JpZ2luYWwgdmFsdWVzDQogICAgICAgICRtYXhJdGVtcyA9ICR0aGlzLT5tYXhJdGVtczsNCiAgICAgICAgJG1heFN0cmluZyA9ICR0aGlzLT5tYXhTdHJpbmc7DQogICAgICAgICRtaW5EZXB0aCA9ICR0aGlzLT5taW5EZXB0aDsNCiAgICAgICAgJGN1cnJlbnREZXB0aCA9IDA7ICAgICAgICAgICAgICAvLyBDdXJyZW50IHRyZWUgZGVwdGgNCiAgICAgICAgJGN1cnJlbnREZXB0aEZpbmFsSW5kZXggPSAwOyAgICAvLyBGaW5hbCAkcXVldWUgaW5kZXggZm9yIGN1cnJlbnQgdHJlZSBkZXB0aA0KICAgICAgICAkbWluaW11bURlcHRoUmVhY2hlZCA9IDAgPT09ICRtaW5EZXB0aDsgLy8gQmVjb21lcyB0cnVlIHdoZW4gbWluaW11bSB0cmVlIGRlcHRoIGhhcyBiZWVuIHJlYWNoZWQNCiAgICAgICAgJGNvb2tpZSA9IChvYmplY3QpIFtdOyAgICAgICAgICAvLyBVbmlxdWUgb2JqZWN0IHVzZWQgdG8gZGV0ZWN0IGhhcmQgcmVmZXJlbmNlcw0KICAgICAgICAkYSA9IG51bGw7ICAgICAgICAgICAgICAgICAgICAgIC8vIEFycmF5IGNhc3QgZm9yIG5lc3RlZCBzdHJ1Y3R1cmVzDQogICAgICAgICRzdHViID0gbnVsbDsgICAgICAgICAgICAgICAgICAgLy8gU3R1YiBjYXB0dXJpbmcgdGhlIG1haW4gcHJvcGVydGllcyBvZiBhbiBvcmlnaW5hbCBpdGVtIHZhbHVlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gb3IgbnVsbCBpZiB0aGUgb3JpZ2luYWwgdmFsdWUgaXMgdXNlZCBkaXJlY3RseQ0KDQogICAgICAgIGlmICghJGdpZCA9IHNlbGY6OiRnaWQpIHsNCiAgICAgICAgICAgICRnaWQgPSBzZWxmOjokZ2lkID0gbWQ1KHJhbmRvbV9ieXRlcyg2KSk7IC8vIFVuaXF1ZSBzdHJpbmcgdXNlZCB0byBkZXRlY3QgdGhlIHNwZWNpYWwgJEdMT0JBTFMgdmFyaWFibGUNCiAgICAgICAgfQ0KICAgICAgICAkYXJyYXlTdHViID0gbmV3IFN0dWIoKTsNCiAgICAgICAgJGFycmF5U3R1Yi0+dHlwZSA9IFN0dWI6OlRZUEVfQVJSQVk7DQogICAgICAgICRmcm9tT2JqQ2FzdCA9IGZhbHNlOw0KDQogICAgICAgIGZvciAoJGkgPSAwOyAkaSA8ICRsZW47ICsrJGkpIHsNCiAgICAgICAgICAgIC8vIERldGVjdCB3aGVuIHdlIG1vdmUgb24gdG8gdGhlIG5leHQgdHJlZSBkZXB0aA0KICAgICAgICAgICAgaWYgKCRpID4gJGN1cnJlbnREZXB0aEZpbmFsSW5kZXgpIHsNCiAgICAgICAgICAgICAgICArKyRjdXJyZW50RGVwdGg7DQogICAgICAgICAgICAgICAgJGN1cnJlbnREZXB0aEZpbmFsSW5kZXggPSAkbGVuIC0gMTsNCiAgICAgICAgICAgICAgICBpZiAoJGN1cnJlbnREZXB0aCA+PSAkbWluRGVwdGgpIHsNCiAgICAgICAgICAgICAgICAgICAgJG1pbmltdW1EZXB0aFJlYWNoZWQgPSB0cnVlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgJHJlZnMgPSAkdmFscyA9ICRxdWV1ZVskaV07DQogICAgICAgICAgICBpZiAoXFBIUF9WRVJTSU9OX0lEIDwgNzAyMDAgJiYgZW1wdHkoJGluZGV4ZWRBcnJheXNbJGldKSkgew0KICAgICAgICAgICAgICAgIC8vIHNlZSBodHRwczovL3dpa2kucGhwLm5ldC9yZmMvY29udmVydF9udW1lcmljX2tleXNfaW5fb2JqZWN0X2FycmF5X2Nhc3RzDQogICAgICAgICAgICAgICAgZm9yZWFjaCAoJHZhbHMgYXMgJGsgPT4gJHYpIHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKFxpc19pbnQoJGspKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICBmb3JlYWNoIChbJGsgPT4gdHJ1ZV0gYXMgJGdrID0+ICRndikgew0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIGlmICgkZ2sgIT09ICRrKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkZnJvbU9iakNhc3QgPSB0cnVlOw0KICAgICAgICAgICAgICAgICAgICAgICAgJHJlZnMgPSAkdmFscyA9IGFycmF5X3ZhbHVlcygkcXVldWVbJGldKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZm9yZWFjaCAoJHZhbHMgYXMgJGsgPT4gJHYpIHsNCiAgICAgICAgICAgICAgICAvLyAkdiBpcyB0aGUgb3JpZ2luYWwgdmFsdWUgb3IgYSBzdHViIG9iamVjdCBpbiBjYXNlIG9mIGhhcmQgcmVmZXJlbmNlcw0KDQogICAgICAgICAgICAgICAgaWYgKFxQSFBfVkVSU0lPTl9JRCA+PSA3MDQwMCkgew0KICAgICAgICAgICAgICAgICAgICAkenZhbFJlZiA9ICgkciA9IFxSZWZsZWN0aW9uUmVmZXJlbmNlOjpmcm9tQXJyYXlFbGVtZW50KCR2YWxzLCAkaykpID8gJHItPmdldElkKCkgOiBudWxsOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICRyZWZzWyRrXSA9ICRjb29raWU7DQogICAgICAgICAgICAgICAgICAgICR6dmFsUmVmID0gJHZhbHNbJGtdID09PSAkY29va2llOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICgkenZhbFJlZikgew0KICAgICAgICAgICAgICAgICAgICAkdmFsc1ska10gPSAmJHN0dWI7ICAgICAgICAgLy8gQnJlYWsgaGFyZCByZWZlcmVuY2VzIHRvIG1ha2UgJHF1ZXVlIGNvbXBsZXRlbHkNCiAgICAgICAgICAgICAgICAgICAgdW5zZXQoJHN0dWIpOyAgICAgICAgICAgICAgIC8vIGluZGVwZW5kZW50IGZyb20gdGhlIG9yaWdpbmFsIHN0cnVjdHVyZQ0KICAgICAgICAgICAgICAgICAgICBpZiAoXFBIUF9WRVJTSU9OX0lEID49IDcwNDAwID8gbnVsbCAhPT0gJHZhbHNbJGtdID0gJGhhcmRSZWZzWyR6dmFsUmVmXSA/PyBudWxsIDogJHYgaW5zdGFuY2VvZiBTdHViICYmIGlzc2V0KCRoYXJkUmVmc1tzcGxfb2JqZWN0X2lkKCR2KV0pKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoXFBIUF9WRVJTSU9OX0lEID49IDcwNDAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHYgPSAkdmFsc1ska107DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZWZzWyRrXSA9ICR2YWxzWyRrXSA9ICR2Ow0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR2LT52YWx1ZSBpbnN0YW5jZW9mIFN0dWIgJiYgKFN0dWI6OlRZUEVfT0JKRUNUID09PSAkdi0+dmFsdWUtPnR5cGUgfHwgU3R1Yjo6VFlQRV9SRVNPVVJDRSA9PT0gJHYtPnZhbHVlLT50eXBlKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICsrJHYtPnZhbHVlLT5yZWZDb3VudDsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICsrJHYtPnJlZkNvdW50Ow0KICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgJHZhbHNbJGtdID0gbmV3IFN0dWIoKTsNCiAgICAgICAgICAgICAgICAgICAgJHZhbHNbJGtdLT52YWx1ZSA9ICR2Ow0KICAgICAgICAgICAgICAgICAgICAkdmFsc1ska10tPmhhbmRsZSA9ICsrJHJlZnNDb3VudGVyOw0KDQogICAgICAgICAgICAgICAgICAgIGlmIChcUEhQX1ZFUlNJT05fSUQgPj0gNzA0MDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICRoYXJkUmVmc1skenZhbFJlZl0gPSAkdmFsc1ska107DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkcmVmc1ska10gPSAkdmFsc1ska107DQogICAgICAgICAgICAgICAgICAgICAgICAkaCA9IHNwbF9vYmplY3RfaWQoJHJlZnNbJGtdKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICRoYXJkUmVmc1skaF0gPSAmJHJlZnNbJGtdOw0KICAgICAgICAgICAgICAgICAgICAgICAgJHZhbHVlc1skaF0gPSAkdjsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAvLyBDcmVhdGUgJHN0dWIgd2hlbiB0aGUgb3JpZ2luYWwgdmFsdWUgJHYgY2FuIG5vdCBiZSB1c2VkIGRpcmVjdGx5DQogICAgICAgICAgICAgICAgLy8gSWYgJHYgaXMgYSBuZXN0ZWQgc3RydWN0dXJlLCBwdXQgdGhhdCBzdHJ1Y3R1cmUgaW4gYXJyYXkgJGENCiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRydWUpIHsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSBudWxsID09PSAkdjoNCiAgICAgICAgICAgICAgICAgICAgY2FzZSBcaXNfYm9vbCgkdik6DQogICAgICAgICAgICAgICAgICAgIGNhc2UgXGlzX2ludCgkdik6DQogICAgICAgICAgICAgICAgICAgIGNhc2UgXGlzX2Zsb2F0KCR2KToNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlIDI7DQogICAgICAgICAgICAgICAgICAgIGNhc2UgXGlzX3N0cmluZygkdik6DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJycgPT09ICR2KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUgMjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghcHJlZ19tYXRjaCgnLy91JywgJHYpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWIgPSBuZXcgU3R1YigpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzdHViLT50eXBlID0gU3R1Yjo6VFlQRV9TVFJJTkc7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWItPmNsYXNzID0gU3R1Yjo6U1RSSU5HX0JJTkFSWTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoMCA8PSAkbWF4U3RyaW5nICYmIDAgPCAkY3V0ID0gXHN0cmxlbigkdikgLSAkbWF4U3RyaW5nKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzdHViLT5jdXQgPSAkY3V0Ow0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+dmFsdWUgPSBzdWJzdHIoJHYsIDAsIC0kY3V0KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+dmFsdWUgPSAkdjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoMCA8PSAkbWF4U3RyaW5nICYmIGlzc2V0KCR2WzEgKyAoJG1heFN0cmluZyA+PiAyKV0pICYmIDAgPCAkY3V0ID0gbWJfc3RybGVuKCR2LCAnVVRGLTgnKSAtICRtYXhTdHJpbmcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1YiA9IG5ldyBTdHViKCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWItPnR5cGUgPSBTdHViOjpUWVBFX1NUUklORzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+Y2xhc3MgPSBTdHViOjpTVFJJTkdfVVRGODsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+Y3V0ID0gJGN1dDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+dmFsdWUgPSBtYl9zdWJzdHIoJHYsIDAsICRtYXhTdHJpbmcsICdVVEYtOCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZSAyOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgJGEgPSBudWxsOw0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQoNCiAgICAgICAgICAgICAgICAgICAgY2FzZSBcaXNfYXJyYXkoJHYpOg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkdikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlIDI7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAkc3R1YiA9ICRhcnJheVN0dWI7DQogICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+Y2xhc3MgPSBTdHViOjpBUlJBWV9JTkRFWEVEOw0KDQogICAgICAgICAgICAgICAgICAgICAgICAkaiA9IC0xOw0KICAgICAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJHYgYXMgJGdrID0+ICRndikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZ2sgIT09ICsrJGopIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWItPmNsYXNzID0gU3R1Yjo6QVJSQVlfQVNTT0M7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICRhID0gJHY7DQoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChTdHViOjpBUlJBWV9BU1NPQyA9PT0gJHN0dWItPmNsYXNzKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ29waWVzIG9mICRHTE9CQUxTIGhhdmUgdmVyeSBzdHJhbmdlIGJlaGF2aW9yLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxldCdzIGRldGVjdCB0aGVtIHdpdGggc29tZSBibGFjayBtYWdpYw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcUEhQX1ZFUlNJT05fSUQgPCA4MDEwMCAmJiAoJGFbJGdpZF0gPSB0cnVlKSAmJiBpc3NldCgkdlskZ2lkXSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zZXQoJHZbJGdpZF0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYSA9IFtdOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkdiBhcyAkZ2sgPT4gJiRndikgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCR2ID09PSAkZ3YgJiYgKFxQSFBfVkVSU0lPTl9JRCA8IDcwNDAwIHx8ICFpc3NldCgkaGFyZFJlZnNbXFJlZmxlY3Rpb25SZWZlcmVuY2U6OmZyb21BcnJheUVsZW1lbnQoJHYsICRnayktPmdldElkKCldKSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bnNldCgkdik7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHYgPSBuZXcgU3R1YigpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR2LT52YWx1ZSA9IFskdi0+Y3V0ID0gXGNvdW50KCRndiksIFN0dWI6OlRZUEVfQVJSQVkgPT4gMF07DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHYtPmhhbmRsZSA9IC0xOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChcUEhQX1ZFUlNJT05fSUQgPj0gNzA0MDApIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGd2ID0gJiRhWyRna107DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRoYXJkUmVmc1tcUmVmbGVjdGlvblJlZmVyZW5jZTo6ZnJvbUFycmF5RWxlbWVudCgkYSwgJGdrKS0+Z2V0SWQoKV0gPSAmJGd2Ow0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRndiA9ICYkaGFyZFJlZnNbc3BsX29iamVjdF9pZCgkdildOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ3YgPSAkdjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGFbJGdrXSA9ICYkZ3Y7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5zZXQoJGd2KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYSA9ICR2Ow0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZWlmIChcUEhQX1ZFUlNJT05fSUQgPCA3MDIwMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRpbmRleGVkQXJyYXlzWyRsZW5dID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KDQogICAgICAgICAgICAgICAgICAgIGNhc2UgXGlzX29iamVjdCgkdik6DQogICAgICAgICAgICAgICAgICAgIGNhc2UgJHYgaW5zdGFuY2VvZiBcX19QSFBfSW5jb21wbGV0ZV9DbGFzczoNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbXB0eSgkb2JqUmVmc1skaCA9IHNwbF9vYmplY3RfaWQoJHYpXSkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1YiA9IG5ldyBTdHViKCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWItPnR5cGUgPSBTdHViOjpUWVBFX09CSkVDVDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+Y2xhc3MgPSBcZ2V0X2NsYXNzKCR2KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+dmFsdWUgPSAkdjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+aGFuZGxlID0gJGg7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGEgPSAkdGhpcy0+Y2FzdE9iamVjdCgkc3R1YiwgMCA8ICRpKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHYgIT09ICRzdHViLT52YWx1ZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoU3R1Yjo6VFlQRV9PQkpFQ1QgIT09ICRzdHViLT50eXBlIHx8IG51bGwgPT09ICRzdHViLT52YWx1ZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWItPmhhbmRsZSA9ICRoID0gc3BsX29iamVjdF9pZCgkc3R1Yi0+dmFsdWUpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+dmFsdWUgPSBudWxsOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgwIDw9ICRtYXhJdGVtcyAmJiAkbWF4SXRlbXMgPD0gJHBvcyAmJiAkbWluaW11bURlcHRoUmVhY2hlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+Y3V0ID0gXGNvdW50KCRhKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGEgPSBudWxsOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbXB0eSgkb2JqUmVmc1skaF0pKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9ialJlZnNbJGhdID0gJHN0dWI7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJG9iamVjdHNbXSA9ICR2Ow0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1YiA9ICRvYmpSZWZzWyRoXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICArKyRzdHViLT5yZWZDb3VudDsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYSA9IG51bGw7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCg0KICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiAvLyByZXNvdXJjZQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVtcHR5KCRyZXNSZWZzWyRoID0gKGludCkgJHZdKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzdHViID0gbmV3IFN0dWIoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+dHlwZSA9IFN0dWI6OlRZUEVfUkVTT1VSQ0U7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCdVbmtub3duJyA9PT0gJHN0dWItPmNsYXNzID0gQGdldF9yZXNvdXJjZV90eXBlKCR2KSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+Y2xhc3MgPSAnQ2xvc2VkJzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWItPnZhbHVlID0gJHY7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWItPmhhbmRsZSA9ICRoOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhID0gJHRoaXMtPmNhc3RSZXNvdXJjZSgkc3R1YiwgMCA8ICRpKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+dmFsdWUgPSBudWxsOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgwIDw9ICRtYXhJdGVtcyAmJiAkbWF4SXRlbXMgPD0gJHBvcyAmJiAkbWluaW11bURlcHRoUmVhY2hlZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3R1Yi0+Y3V0ID0gXGNvdW50KCRhKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGEgPSBudWxsOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbXB0eSgkcmVzUmVmc1skaF0pKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJlc1JlZnNbJGhdID0gJHN0dWI7DQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzdHViID0gJHJlc1JlZnNbJGhdOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICsrJHN0dWItPnJlZkNvdW50Ow0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhID0gbnVsbDsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOw0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICgkYSkgew0KICAgICAgICAgICAgICAgICAgICBpZiAoISRtaW5pbXVtRGVwdGhSZWFjaGVkIHx8IDAgPiAkbWF4SXRlbXMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICRxdWV1ZVskbGVuXSA9ICRhOw0KICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWItPnBvc2l0aW9uID0gJGxlbisrOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoJHBvcyA8ICRtYXhJdGVtcykgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRtYXhJdGVtcyA8ICRwb3MgKz0gXGNvdW50KCRhKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRhID0gXGFycmF5X3NsaWNlKCRhLCAwLCAkbWF4SXRlbXMgLSAkcG9zLCB0cnVlKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJHN0dWItPmN1dCA+PSAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzdHViLT5jdXQgKz0gJHBvcyAtICRtYXhJdGVtczsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAkcXVldWVbJGxlbl0gPSAkYTsNCiAgICAgICAgICAgICAgICAgICAgICAgICRzdHViLT5wb3NpdGlvbiA9ICRsZW4rKzsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlaWYgKCRzdHViLT5jdXQgPj0gMCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWItPmN1dCArPSBcY291bnQoJGEpOw0KICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWItPnBvc2l0aW9uID0gMDsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICgkYXJyYXlTdHViID09PSAkc3R1Yikgew0KICAgICAgICAgICAgICAgICAgICBpZiAoJGFycmF5U3R1Yi0+Y3V0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAkc3R1YiA9IFskYXJyYXlTdHViLT5jdXQsICRhcnJheVN0dWItPmNsYXNzID0+ICRhcnJheVN0dWItPnBvc2l0aW9uXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICRhcnJheVN0dWItPmN1dCA9IDA7DQogICAgICAgICAgICAgICAgICAgIH0gZWxzZWlmIChpc3NldChzZWxmOjokYXJyYXlDYWNoZVskYXJyYXlTdHViLT5jbGFzc11bJGFycmF5U3R1Yi0+cG9zaXRpb25dKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgJHN0dWIgPSBzZWxmOjokYXJyYXlDYWNoZVskYXJyYXlTdHViLT5jbGFzc11bJGFycmF5U3R1Yi0+cG9zaXRpb25dOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgc2VsZjo6JGFycmF5Q2FjaGVbJGFycmF5U3R1Yi0+Y2xhc3NdWyRhcnJheVN0dWItPnBvc2l0aW9uXSA9ICRzdHViID0gWyRhcnJheVN0dWItPmNsYXNzID0+ICRhcnJheVN0dWItPnBvc2l0aW9uXTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIGlmICghJHp2YWxSZWYpIHsNCiAgICAgICAgICAgICAgICAgICAgJHZhbHNbJGtdID0gJHN0dWI7DQogICAgICAgICAgICAgICAgfSBlbHNlaWYgKFxQSFBfVkVSU0lPTl9JRCA+PSA3MDQwMCkgew0KICAgICAgICAgICAgICAgICAgICAkaGFyZFJlZnNbJHp2YWxSZWZdLT52YWx1ZSA9ICRzdHViOw0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICRyZWZzWyRrXS0+dmFsdWUgPSAkc3R1YjsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGlmICgkZnJvbU9iakNhc3QpIHsNCiAgICAgICAgICAgICAgICAkZnJvbU9iakNhc3QgPSBmYWxzZTsNCiAgICAgICAgICAgICAgICAkcmVmcyA9ICR2YWxzOw0KICAgICAgICAgICAgICAgICR2YWxzID0gW107DQogICAgICAgICAgICAgICAgJGogPSAtMTsNCiAgICAgICAgICAgICAgICBmb3JlYWNoICgkcXVldWVbJGldIGFzICRrID0+ICR2KSB7DQogICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKFskayA9PiB0cnVlXSBhcyAkZ2sgPT4gJGd2KSB7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgaWYgKCRnayAhPT0gJGspIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICR2YWxzID0gKG9iamVjdCkgJHZhbHM7DQogICAgICAgICAgICAgICAgICAgICAgICAkdmFscy0+eyRrfSA9ICRyZWZzWysrJGpdOw0KICAgICAgICAgICAgICAgICAgICAgICAgJHZhbHMgPSAoYXJyYXkpICR2YWxzOw0KICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgJHZhbHNbJGtdID0gJHJlZnNbKyskal07DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICRxdWV1ZVskaV0gPSAkdmFsczsNCiAgICAgICAgfQ0KDQogICAgICAgIGZvcmVhY2ggKCR2YWx1ZXMgYXMgJGggPT4gJHYpIHsNCiAgICAgICAgICAgICRoYXJkUmVmc1skaF0gPSAkdjsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiAkcXVldWU7DQogICAgfQ0KfQ0KIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MTp7czozNToiXFN5bWZvbnlcQ29tcG9uZW50XFZhckR1bXBlclxDbG9uZXIiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozNToiXFN5bWZvbnlcQ29tcG9uZW50XFZhckR1bXBlclxDbG9uZXIiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo2OiJDbG9uZXIiO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MTp7czo0NToiXFN5bWZvbnlcQ29tcG9uZW50XFZhckR1bXBlclxDbG9uZXJcVmFyQ2xvbmVyIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXyI6MTM6e3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQ1OiJcU3ltZm9ueVxDb21wb25lbnRcVmFyRHVtcGVyXENsb25lclxWYXJDbG9uZXIiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo5OiJWYXJDbG9uZXIiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZG9jQmxvY2siO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jayI6Nzp7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBzdW1tYXJ5IjtzOjA6IiI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czowOiIiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAdGFncyI7YToxOntpOjA7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcQXV0aG9yIjo0OntzOjc6IgAqAG5hbWUiO3M6NjoiYXV0aG9yIjtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcQXV0aG9yAGF1dGhvck5hbWUiO3M6MTQ6Ik5pY29sYXMgR3Jla2FzIjtzOjU4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcQXV0aG9yAGF1dGhvckVtYWlsIjtzOjEzOiJwQHRjaHdvcmsuY29tIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tjt9fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7TzozODoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQiOjI6e3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2UiO3M6MzQ6IlN5bWZvbnlcQ29tcG9uZW50XFZhckR1bXBlclxDbG9uZXIiO3M6NTY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dABuYW1lc3BhY2VBbGlhc2VzIjthOjA6e319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcGFyZW50IjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTA6IlxTeW1mb255XENvbXBvbmVudFxWYXJEdW1wZXJcQ2xvbmVyXEFic3RyYWN0Q2xvbmVyIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTQ6IkFic3RyYWN0Q2xvbmVyIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGltcGxlbWVudHMiO2E6MDp7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBjb25zdGFudHMiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBwcm9wZXJ0aWVzIjthOjI6e3M6NTE6IlxTeW1mb255XENvbXBvbmVudFxWYXJEdW1wZXJcQ2xvbmVyXFZhckNsb25lcjo6JGdpZCI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eSI6MTE6e3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6NTE6IlxTeW1mb255XENvbXBvbmVudFxWYXJEdW1wZXJcQ2xvbmVyXFZhckNsb25lcjo6JGdpZCI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjM6ImdpZCI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGRvY0Jsb2NrIjtOO3M6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGVzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkZWZhdWx0IjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHN0YXRpYyI7YjoxO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjc6InByaXZhdGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTk7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AHR5cGUiO047czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAcmVhZE9ubHkiO2I6MDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBtZXRhZGF0YSI7YTowOnt9fXM6NTg6IlxTeW1mb255XENvbXBvbmVudFxWYXJEdW1wZXJcQ2xvbmVyXFZhckNsb25lcjo6JGFycmF5Q2FjaGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkiOjExOntzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjU4OiJcU3ltZm9ueVxDb21wb25lbnRcVmFyRHVtcGVyXENsb25lclxWYXJDbG9uZXI6OiRhcnJheUNhY2hlIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTA6ImFycmF5Q2FjaGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBkb2NCbG9jayI7TjtzOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQB0eXBlcyI7YTowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAZGVmYXVsdCI7czoyOiJbXSI7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAc3RhdGljIjtiOjE7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NzoicHJpdmF0ZSI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTowO31zOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQBlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcUHJvcGVydHkAdHlwZSI7TjtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxQcm9wZXJ0eQByZWFkT25seSI7YjowO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFByb3BlcnR5AG1ldGFkYXRhIjthOjA6e319fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRob2RzIjthOjE6e3M6NTY6IlxTeW1mb255XENvbXBvbmVudFxWYXJEdW1wZXJcQ2xvbmVyXFZhckNsb25lcjo6ZG9DbG9uZSgpIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZCI6MTI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MTM6IntAaW5oZXJpdGRvY30iO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MDoiIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAY29udGV4dCI7cjozMDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjU2OiJcU3ltZm9ueVxDb21wb25lbnRcVmFyRHVtcGVyXENsb25lclxWYXJDbG9uZXI6OmRvQ2xvbmUoKSI7czozNjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBuYW1lIjtzOjc6ImRvQ2xvbmUiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjk6InByb3RlY3RlZCI7fXM6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhcmd1bWVudHMiO2E6MTp7aTowO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6MzoidmFyIjtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjU7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozMjM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fX19czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAHVzZWRUcmFpdHMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MTc7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTozMjQ7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MDt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAG1ldGFkYXRhIjthOjA6e319fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";